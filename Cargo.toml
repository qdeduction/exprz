[package]
name = "exprz"
version = "0.0.15"
edition = "2018"
authors = ["Brandon H. Gomes <bh.gomes@rutgers.edu>"]
documentation = "https://docs.rs/exprz"
homepage = "https://github.com/qdeduction/exprz"
repository = "https://github.com/qdeduction/exprz"
readme = "README.md"
license = "ISC"
keywords = ["expressions", "expression-parser", "s-expressions", "s-expr"]
categories = ["data-structures", "no-std", "parsing"]
description = "An Expression Library"
exclude = [""]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[badges]
is-it-maintained-issue-resolution = { repository = "qdeduction/exprz" }
is-it-maintained-open-issues = { repository = "qdeduction/exprz" }
maintenance = { status = "actively-developed" }

[features]
# No default features enabled
default = []

# Adds allocation
alloc = [
    "serde/alloc",
]

# [EXPERIMENTAL] Adds buffered expression
buffered = [
    "alloc"
]

# [EXPERIMENTAL] Adds graph algorithms
graph = []

# [EXPERIMENTAL] Adds multi-expressions
multi = []

# [EXPERIMENTAL] Adds functions which can panic
panic = []

# [EXPERIMENTAL] Adds parsing support
parse = []

# [EXPERIMENTAL] Adds pattern trait
pattern = []

# [EXPERIMENTAL] Adds shape trait
shape = []

# [EXPERIMENTAL] Adds unicode support
unicode = [
    "unicode-segmentation",
]

# [EXPERIMENTAL] Adds traversal algorithms
visit = []

# Enables all stable features
stable = [
    "alloc",
    "panic",
]

# Enables all experimental features
experimental = [
    "buffered",
    "graph",
    "multi",
    "parse",
    "pattern",
    "petgraph",
    "rayon",
    "serde",
    "shape",
    "unicode",
    "visit",
]

# Enables all features
all = [
    "stable", 
    "experimental",
]

[dependencies]
petgraph = { version = "0.5.1", optional = true }
rayon = { version = "1.5.0", optional = true }
serde = { version = "1.0.125", default-features = false, features = ["derive"], optional = true }
unicode-segmentation = { version = "1.7.1", optional = true }

